name: Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt

      - name: Build EXE
        run: |
          pyinstaller `
            --noconsole `
            --contents-directory="." `
            --name IconLibrary `
            --icon=assets/images/logo.png `
            --add-data "assets;assets" `
            app.py

      - name: Zip Windows EXE
        run: |
          powershell Compress-Archive -Path dist/IconLibrary/* -DestinationPath dist/IconLibrary-Windows.zip

      - name: Upload Windows zip as artifact
        uses: actions/upload-artifact@v4
        with:
          name: IconLibrary-Windows
          path: dist/IconLibrary-Windows.zip

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip3 install pyinstaller
          pip3 install -r requirements.txt

      - name: Build .app
        run: |
          pyinstaller \
            --noconsole \
            --name IconLibrary \
            --icon=assets/images/logo.icns \
            --add-data "assets:assets" \
            app.py

      - name: Zip macOS .app
        run: |
          cd dist
          ditto -c -k --sequesterRsrc --keepParent IconLibrary.app IconLibrary-macOS.zip

      - name: Upload macOS zip as artifact
        uses: actions/upload-artifact@v4
        with:
          name: IconLibrary-macOS
          path: dist/IconLibrary-macOS.zip

  release:
    needs: [build-windows, build-macos]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: IconLibrary-Windows
          path: dist/

      - name: Download macOS artifact
        uses: actions/download-artifact@v4
        with:
          name: IconLibrary-macOS
          path: dist/

      - name: Set up git-cliff
        uses: kenji-miyake/setup-git-cliff@v1

      - name: Generate CHANGELOG.md
        run: |
          git cliff --tag "${{ github.ref_name }}" > CHANGELOG.md

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          body_path: CHANGELOG.md
          draft: true
          files: |
            dist/IconLibrary-Windows.zip
            dist/IconLibrary-macOS.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
